AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ParamPipelineName:
    Type: String
    MaxLength: 54
    MinLength: 4
    AllowedPattern: ^[A-Za-z0-9][A-Za-z0-9\-]{2,52}[A-Za-z0-9]$
    ConstraintDescription: "Must only contain alphanumeric or dashes (and cannot start or end with a dash)"
  ParamBucketPrefix:
    Type: String
    MaxLength: 39
    MinLength: 3
    AllowedPattern: ^[0-9a-z][0-9a-z\-]{1,37}[0-9a-z]$
  ParamBucketRegion:
    Type: String
    AllowedValues:
      - 'ap-northeast-1'
      - 'ap-northeast-2'
      - 'ap-south-1'
      - 'ap-southeast-1'
      - 'ap-southeast-2'
      - 'ca-central-1'
      - 'eu-central-1'
      - 'eu-north-1'
      - 'eu-west-1'
      - 'eu-west-2'
      - 'eu-west-3'
      - 'sa-east-1'
      - 'us-east-1'
      - 'us-east-2'
      - 'us-west-1'
      - 'us-west-2'
  ParamBucketSuffix:
    Type: String
    MaxLength: 9
    MinLength: 1
    Default: 'inception'
  ParamOrganisationUnitId:
    Type: String
  ParamDeployerRoleName:
    Type: String
  ParamAssumerRoleName:
    Type: String
  ParamChild1AccountId:
    Type: String
  ParamAdministratorRoleName:
    Type: String
  ParamReadOnlyRoleName:
    Type: String
  ParamDefaultPassword:
    Type: String

Resources:

  CodeCommitRepository:
    Type: 'AWS::CodeCommit::Repository'
    Properties:
      RepositoryName: !Ref ParamPipelineName
      RepositoryDescription: !Sub '${ParamPipelineName}- CodeCommit Repository'

  CodePipelineBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub '${ParamBucketPrefix}-${ParamBucketRegion}-${ParamBucketSuffix}'

  CodePipelineBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CodePipelineBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: ['s3:*']
            Effect: Allow
            Resource:
              - !GetAtt CodePipelineBucket.Arn
              - !Sub '${CodePipelineBucket.Arn}/*'
            Principal:
              AWS:
                - !GetAtt CloudFormationDeployActionRole.Arn
                - !GetAtt CodeBuildValidationRole.Arn
                - !GetAtt CodePipelineRole.Arn
                # - !Sub "arn:aws:iam::${ParamChild1AccountId}:role/${ParamAssumerRoleName}"
                # - !Sub "arn:aws:iam::${ParamChild1AccountId}:role/${ParamDeployerRoleName}"
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub '${CodePipelineBucket.Arn}/*'
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': ['AES256', 'aws:kms']
          - Sid: DenyUnencryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: s3:PutObject
            Resource: !Sub '${CodePipelineBucket.Arn}/*'
            Condition:
              'Null':
                s3:x-amz-server-side-encryption: true
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Sub '${CodePipelineBucket.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

  CloudFormationDeployActionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: 'AdministerPipelinePermissions'
                Action:
                  - 'cloudformation:*'
                  - 'codecommit:CreateRepository'
                  - 'codecommit:DeleteRepository'
                  - 'codecommit:GetRepository'
                  - 'codecommit:GitPush'
                  - 'codecommit:ListRepositories'
                  - 'codepipeline:CreatePipeline'
                  - 'codepipeline:DeletePipeline'
                  - 'codepipeline:GetPipeline'
                  - 'codepipeline:GetPipelineState'
                  - 'codepipeline:StartPipelineExecution'
                  - 'codepipeline:UpdatePipeline'
                  - 'iam:AddUserToGroup'
                  - 'iam:AttachGroupPolicy'
                  - 'iam:AttachRolePolicy'
                  - 'iam:AttachUserPolicy'
                  - 'iam:CreateGroup'
                  - 'iam:CreateLoginProfile'
                  - 'iam:CreatePolicy'
                  - 'iam:CreatePolicyVersion'
                  - 'iam:CreateRole'
                  - 'iam:CreateUser'
                  - 'iam:DeleteGroup'
                  - 'iam:DeleteGroupPolicy'
                  - 'iam:DeleteLoginProfile'
                  - 'iam:DeletePolicy'
                  - 'iam:DeletePolicyVersion'
                  - 'iam:DeleteRole'
                  - 'iam:DeleteRolePermissionsBoundary'
                  - 'iam:DeleteRolePolicy'
                  - 'iam:DeleteUser'
                  - 'iam:DeleteUserPermissionsBoundary'
                  - 'iam:DeleteUserPolicy'
                  - 'iam:DetachGroupPolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:DetachUserPolicy'
                  - 'iam:GetAccountPasswordPolicy'
                  - 'iam:GetGroup'
                  - 'iam:GetGroupPolicy'
                  - 'iam:GetLoginProfile'
                  - 'iam:GetPolicy'
                  - 'iam:GetPolicyVersion'
                  - 'iam:GetRole'
                  - 'iam:GetRolePolicy'
                  - 'iam:GetUser'
                  - 'iam:GetUserPolicy'
                  - 'iam:ListAccessKeys'
                  - 'iam:ListAttachedGroupPolicies'
                  - 'iam:ListAttachedRolePolicies'
                  - 'iam:ListAttachedUserPolicies'
                  - 'iam:ListEntitiesForPolicy'
                  - 'iam:ListGroupPolicies'
                  - 'iam:ListGroups'
                  - 'iam:ListGroupsForUser'
                  - 'iam:ListPolicies'
                  - 'iam:ListPolicyVersions'
                  - 'iam:ListRolePolicies'
                  - 'iam:ListRoles'
                  - 'iam:ListRoleTags'
                  - 'iam:ListUserPolicies'
                  - 'iam:ListUsers'
                  - 'iam:ListUserTags'
                  - 'iam:PassRole'
                  - 'iam:PutGroupPolicy'
                  - 'iam:PutRolePermissionsBoundary'
                  - 'iam:PutRolePolicy'
                  - 'iam:PutUserPermissionsBoundary'
                  - 'iam:PutUserPolicy'
                  - 'iam:RemoveUserFromGroup'
                  - 'iam:SetDefaultPolicyVersion'
                  - 'iam:TagRole'
                  - 'iam:TagUser'
                  - 'iam:UntagRole'
                  - 'iam:UntagUser'
                  - 'iam:UpdateAssumeRolePolicy'
                  - 'iam:UpdateGroup'
                  - 'iam:UpdateLoginProfile'
                  - 'iam:UpdateRole'
                  - 'iam:UpdateRoleDescription'
                  - 'iam:UpdateUser'
                  - 'kms:*'
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                  - 's3:DeleteBucketEncryption'
                  - 's3:DeleteBucketPolicy'
                  - 's3:DeleteObject'
                  - 's3:DescribeBucketPolicy'
                  - 's3:GetBucketEncryption'
                  - 's3:GetBucketPolicy'
                  - 's3:GetBucketPolicyStatus'
                  - 's3:GetEncryptionConfiguration'
                  - 's3:ListBucket'
                  - 's3:PutBucketPolicy'
                  - 's3:PutEncryptionConfiguration'
                  - 's3:SetBucketEncryption'
                Effect: Allow
                Resource: ['*']
              - Sid: 'AdministerCodeBuild'
                Action:
                  - 'codebuild:CreateProject'
                  - 'codebuild:CreateReport'
                  - 'codebuild:CreateReportGroup'
                  - 'codebuild:DeleteProject'
                  - 'codebuild:DeleteReport'
                  - 'codebuild:DeleteReportGroup'
                  - 'codebuild:DeleteResourcePolicy'
                  - 'codebuild:GetResourcePolicy'
                  - 'codebuild:ListProjects'
                  - 'codebuild:ListReportGroups'
                  - 'codebuild:ListReports'
                  - 'codebuild:PutResourcePolicy'
                  - 'codebuild:UpdateProject'
                  - 'codebuild:UpdateReport'
                  - 'codebuild:UpdateReportGroup'
                Effect: Allow
                Resource: ['*']
      RoleName: !Sub '${ParamPipelineName}-CfnDeploy'

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ['codepipeline.amazonaws.com']
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: "GrantCrossAccountRoleAssumption"
                Action: ["sts:AssumeRole"]
                Resource:
                  - !Sub "arn:aws:iam::${ParamChild1AccountId}:role/${ParamAssumerRoleName}"
                Effect: Allow
              - Sid: "GrantPermissionsToManageThePipeline"
                Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStackEvents'
                  - 'cloudformation:DescribeStackResource'
                  - 'cloudformation:DescribeStackResources'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:GetTemplate'
                  - 'cloudformation:UpdateStack'
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                  - 'iam:PassRole'
                  - 'kms:Decrypt'
                  - 'kms:DescribeKey'
                  - 'kms:Encrypt'
                  - 'kms:GenerateDataKey*'
                  - 'kms:ReEncrypt*'
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                  - 's3:DeleteBucketEncryption'
                  - 's3:DeleteBucketPolicy'
                  - 's3:DeleteObject'
                  - 's3:DescribeBucketPolicy'
                  - 's3:GetBucketEncryption'
                  - 's3:GetBucketPolicy'
                  - 's3:GetBucketPolicyStatus'
                  - 's3:GetBucketVersioning'
                  - 's3:GetEncryptionConfiguration'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:ListBucket'
                  - 's3:PutBucketPolicy'
                  - 's3:PutEncryptionConfiguration'
                  - 's3:PutObject'
                  - 's3:SetBucketEncryption'
                Resource: ['*']
                Effect: Allow
              - Sid: 'GrantPermissionsToManageCodeBuild'
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                  - 'codebuild:StopBuild'
                Resource: ['*']
                Effect: Allow
      RoleName: !Sub '${ParamPipelineName}-Pipeline'

  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        EncryptionKey:
          Id: !Ref KMSKey
          Type: KMS
        Location: !Ref CodePipelineBucket
        Type: S3
      Name: !Ref ParamPipelineName
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: 'Source'
          Actions:
            - InputArtifacts: []
              Name: 'Source'
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: 'CodeCommitSource'
              Configuration:
                BranchName: 'master'
                RepositoryName: !GetAtt CodeCommitRepository.Name
              RunOrder: 1
        - Name: 'AdministerPipeline'
          Actions:
            - Name: 'AdministerPipeline'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationDeployActionRole.Arn
                StackName: !Sub '${ParamPipelineName}-Inception'
                TemplateConfiguration: 'CodeCommitSource::pipeline/aws_seed.json'
                TemplatePath: 'CodeCommitSource::pipeline/aws_seed.yml'
              InputArtifacts:
                - Name: 'CodeCommitSource'
              RunOrder: 1
            - Name: 'CloudFormation'
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildValidationProject
              InputArtifacts:
                - Name: 'CodeCommitSource'
              OutputArtifacts:
                - Name: 'Ignored'
              RunOrder: 2
        - Name: 'AdministerOrganisation'
          Actions:
            - Name: 'RbacStackSet'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                ParameterOverrides: !Sub |
                  {
                    "ParamPipelineName": "${ParamPipelineName}"
                    , "ParamOrganisationUnitId": "${ParamOrganisationUnitId}"
                    , "ParamPrimaryAccountId": "${AWS::AccountId}"
                    , "ParamKmsKeyArn": "${KMSKey.Arn}"
                    , "ParamDeployerRoleName": "${ParamDeployerRoleName}"
                    , "ParamAssumerRoleName": "${ParamAssumerRoleName}"
                  }
                RoleArn: !GetAtt CloudFormationDeployActionRole.Arn
                StackName: !Sub '${ParamPipelineName}StackSet'
                TemplateConfiguration: 'CodeCommitSource::pipeline/resource_tags.json'
                TemplatePath: 'CodeCommitSource::infrastructure/iam_rbac_stackset.yml'
              InputArtifacts:
                - Name: 'CodeCommitSource'
              RunOrder: 1
        # - Name: 'AdministerAccounts'
        #   Actions:
        #     - Name: 'ChildAccount1'
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Provider: CloudFormation
        #         Version: '1'
        #       Configuration:
        #         ActionMode: REPLACE_ON_FAILURE
        #         Capabilities: CAPABILITY_NAMED_IAM
        #         ParameterOverrides: !Sub |
        #           {
        #             "ParamBucketName": "${CodePipelineBucket}"
        #             , "ParamBucketRegion": "${ParamBucketRegion}"
        #             , "ParamPrimaryAccountId": "${AWS::AccountId}"
        #             , "ParamAdministratorRoleName": "${ParamAdministratorRoleName}"
        #             , "ParamReadOnlyRoleName": "${ParamReadOnlyRoleName}"
        #           }
        #         RoleArn: !Sub "arn:aws:iam::${ParamChild1AccountId}:role/${ParamDeployerRoleName}"
        #         StackName: !Sub '${ParamPipelineName}-Rbac'
        #         TemplateConfiguration: 'CodeCommitSource::pipeline/resource_tags.json'
        #         TemplatePath: 'CodeCommitSource::infrastructure/iam_rbac_account_child1.yml'
        #       RoleArn: !Sub "arn:aws:iam::${ParamChild1AccountId}:role/${ParamAssumerRoleName}"
        #       InputArtifacts:
        #         - Name: 'CodeCommitSource'
        #       RunOrder: 1
        - Name: 'AdministerPrimary' # This stage must always be the last one as it relies on the other roles existing for cross-account role assumption
          Actions:
            - Name: 'Master'
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                # NOTE: total size for 'ParameterOverrides' is 1kb in size
                # Therefore the values have been split so that the account ids are in
                # a separate file called 'aws_seed_account_ids.json'
                ParameterOverrides: !Sub |
                  {
                    "ParamBucketName": "${CodePipelineBucket}",
                    "ParamBucketRegion": "${ParamBucketRegion}",
                    "ParamDefaultPassword": "${ParamDefaultPassword}",
                    "ParamChild1AccountId": "${ParamChild1AccountId}",
                    "ParamAdministratorRoleName": "${ParamAdministratorRoleName}",
                    "ParamReadOnlyRoleName": "${ParamReadOnlyRoleName}"
                  }
                RoleArn: !GetAtt CloudFormationDeployActionRole.Arn
                StackName: !Sub '${ParamPipelineName}-Rbac'
                TemplateConfiguration: 'CodeCommitSource::pipeline/resource_tags.json'
                TemplatePath: 'CodeCommitSource::infrastructure/iam_rbac_account_primary.yml'
              InputArtifacts:
                - Name: 'CodeCommitSource'
              RunOrder: 1

  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used to protect Build artifacts
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Id: !Ref AWS::StackName
        Statement:
          - Sid: Allows administration of the key
            Effect: Allow
            Principal:
              AWS: 
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - kms:*
            Resource: '*'
          - Sid: Allow use of the key from the other accounts
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt CodePipelineRole.Arn
                - !GetAtt CloudFormationDeployActionRole.Arn
                # - !Sub "arn:aws:iam::${ParamChild1AccountId}:role/${ParamAssumerRoleName}"
                # - !Sub "arn:aws:iam::${ParamChild1AccountId}:role/${ParamDeployerRoleName}"
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"

  KMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/${ParamBucketPrefix}'
      TargetKeyId: !Ref KMSKey

  CodeBuildValidationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:*'
                  - 'iam:*'
                  - 'logs:*'
                Resource: ['*']
              - Sid: 'KMSPermissions'
                Effect: Allow
                Action:
                  - 'kms:Decrypt'
                  - 'kms:DescribeKey'
                  - 'kms:Encrypt'
                  - 'kms:GenerateDataKey*'
                  - 'kms:ReEncrypt*'
                Resource:
                  - !GetAtt KMSKey.Arn
      RoleName: !Sub '${ParamPipelineName}-Validation'

  CodeBuildValidationProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Packaging: ZIP
        Type: CODEPIPELINE
      Description: Validate CloudFormation templates before deployment
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET
            Type: PLAINTEXT #  PARAMETER_STORE | PLAINTEXT | SECRETS_MANAGER
            Value: !Ref CodePipelineBucket
          - Name: KMSKEYARN
            Type: PLAINTEXT
            Value: !GetAtt KMSKey.Arn
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      Name: !Sub '${ParamPipelineName}-Validation'
      ServiceRole: !GetAtt CodeBuildValidationRole.Arn
      Source:
        BuildSpec: 'pipeline/buildspec-validation.yml'
        Type: CODEPIPELINE
      TimeoutInMinutes: 10

Outputs:

  CodeCommitRepositoryArn:
    Description: CodeCommit Arn
    Value: !GetAtt CodeCommitRepository.Arn
  CodeCommitRepositoryCloneUrlHttp:
    Description: CodeCommit CloneUrlHttp
    Value: !GetAtt CodeCommitRepository.CloneUrlHttp
  CodePipelineBucketArn:
    Description: CodePipeline S3 Bucket Arn
    Value: !GetAtt CodePipelineBucket.Arn
  CodePipelineBucketDomainName:
    Description: CodePipeline S3 Bucket DomainName
    Value: !GetAtt CodePipelineBucket.DomainName
  CodePipelineBucketWebsiteURL:
    Description: CodePipeline S3 Bucket WebsiteURL
    Value: !GetAtt CodePipelineBucket.WebsiteURL
  CloudFormationDeployActionRoleArn:
    Description: CloudFormationDeployActionRole Arn
    Value: !GetAtt CloudFormationDeployActionRole.Arn
  CodePipelineRoleArn:
    Description: CodePipelineRole Arn
    Value: !GetAtt CodePipelineRole.Arn
  CodePipelineName:
    Description: CodePipeline Name
    Value: !Ref CodePipeline
  KMSKeyArn:
    Description: KMS Key Arn
    Value: !GetAtt KMSKey.Arn
